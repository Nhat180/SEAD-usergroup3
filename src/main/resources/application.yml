spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 412957065085-qnt4gscg8bls830k1l1rfu9i9hru5chk.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - email
              - profile
          github:
            clientId: a312195c4f28472f4f23
            clientSecret: 8b80e765fc7974099af2ab1e0cd3cb9218afdb6a
            redirectUri: "https://sead-usergroup3.herokuapp.com/login/oauth2/code/{registrationId}"
            scope:
              - user:email
              - read:user
  cloud:
    gateway:
      routes:
        - id: service
          uri: https://service-sead-group3.herokuapp.com
          predicates:
            - Path=/**
        - id: service_trans
          uri: https://service-trans-sead-group3.herokuapp.com
          predicates:
            - Path=/**
  kafka:
    bootstrap-servers: ${kafka_bootstrap_servers:localhost:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
